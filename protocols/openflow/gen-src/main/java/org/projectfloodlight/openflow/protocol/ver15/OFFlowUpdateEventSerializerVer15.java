// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template const_serializer.java
// Do not modify

package org.projectfloodlight.openflow.protocol.ver15;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import org.projectfloodlight.openflow.protocol.OFFlowUpdateEvent;
import io.netty.buffer.ByteBuf;
import com.google.common.hash.PrimitiveSink;

public class OFFlowUpdateEventSerializerVer15 {

    public final static short INITIAL_VAL = (short) 0x0;
    public final static short ADDED_VAL = (short) 0x1;
    public final static short REMOVED_VAL = (short) 0x2;
    public final static short MODIFIED_VAL = (short) 0x3;
    public final static short ABBREV_VAL = (short) 0x4;
    public final static short PAUSED_VAL = (short) 0x5;
    public final static short RESUMED_VAL = (short) 0x6;

    public static OFFlowUpdateEvent readFrom(ByteBuf bb) throws OFParseError {
        try {
            return ofWireValue(bb.readShort());
        } catch (IllegalArgumentException e) {
            throw new OFParseError(e);
        }
    }

    public static void writeTo(ByteBuf bb, OFFlowUpdateEvent e) {
        bb.writeShort(toWireValue(e));
    }

    public static void putTo(OFFlowUpdateEvent e, PrimitiveSink sink) {
        sink.putShort(toWireValue(e));
    }

    public static OFFlowUpdateEvent ofWireValue(short val) {
        switch(val) {
            case INITIAL_VAL:
                return OFFlowUpdateEvent.INITIAL;
            case ADDED_VAL:
                return OFFlowUpdateEvent.ADDED;
            case REMOVED_VAL:
                return OFFlowUpdateEvent.REMOVED;
            case MODIFIED_VAL:
                return OFFlowUpdateEvent.MODIFIED;
            case ABBREV_VAL:
                return OFFlowUpdateEvent.ABBREV;
            case PAUSED_VAL:
                return OFFlowUpdateEvent.PAUSED;
            case RESUMED_VAL:
                return OFFlowUpdateEvent.RESUMED;
            default:
                throw new IllegalArgumentException("Illegal wire value for type OFFlowUpdateEvent in version 1.5: " + val);
        }
    }


    public static short toWireValue(OFFlowUpdateEvent e) {
        switch(e) {
            case INITIAL:
                return INITIAL_VAL;
            case ADDED:
                return ADDED_VAL;
            case REMOVED:
                return REMOVED_VAL;
            case MODIFIED:
                return MODIFIED_VAL;
            case ABBREV:
                return ABBREV_VAL;
            case PAUSED:
                return PAUSED_VAL;
            case RESUMED:
                return RESUMED_VAL;
            default:
                throw new IllegalArgumentException("Illegal enum value for type OFFlowUpdateEvent in version 1.5: " + e);
        }
    }

}
