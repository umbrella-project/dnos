// Copyright (c) 2008 The Board of Trustees of The Leland Stanford Junior University
// Copyright (c) 2011, 2012 Open Networking Foundation
// Copyright (c) 2012, 2013 Big Switch Networks, Inc.
// This library was generated by the LoxiGen Compiler.
// See the file LICENSE.txt which should have been included in the source distribution

// Automatically generated by LOXI from template const_serializer.java
// Do not modify

package org.projectfloodlight.openflow.protocol.ver15;

import org.projectfloodlight.openflow.protocol.*;
import org.projectfloodlight.openflow.protocol.action.*;
import org.projectfloodlight.openflow.protocol.actionid.*;
import org.projectfloodlight.openflow.protocol.bsntlv.*;
import org.projectfloodlight.openflow.protocol.errormsg.*;
import org.projectfloodlight.openflow.protocol.meterband.*;
import org.projectfloodlight.openflow.protocol.instruction.*;
import org.projectfloodlight.openflow.protocol.instructionid.*;
import org.projectfloodlight.openflow.protocol.match.*;
import org.projectfloodlight.openflow.protocol.stat.*;
import org.projectfloodlight.openflow.protocol.oxm.*;
import org.projectfloodlight.openflow.protocol.oxs.*;
import org.projectfloodlight.openflow.protocol.queueprop.*;
import org.projectfloodlight.openflow.types.*;
import org.projectfloodlight.openflow.util.*;
import org.projectfloodlight.openflow.exceptions.*;
import org.projectfloodlight.openflow.protocol.OFAsyncConfigPropType;
import io.netty.buffer.ByteBuf;
import com.google.common.hash.PrimitiveSink;

public class OFAsyncConfigPropTypeSerializerVer15 {

    public final static short PACKET_IN_SLAVE_VAL = (short) 0x0;
    public final static short PACKET_IN_MASTER_VAL = (short) 0x1;
    public final static short PORT_STATUS_SLAVE_VAL = (short) 0x2;
    public final static short PORT_STATUS_MASTER_VAL = (short) 0x3;
    public final static short FLOW_REMOVED_SLAVE_VAL = (short) 0x4;
    public final static short FLOW_REMOVED_MASTER_VAL = (short) 0x5;
    public final static short ROLE_STATUS_SLAVE_VAL = (short) 0x6;
    public final static short ROLE_STATUS_MASTER_VAL = (short) 0x7;
    public final static short TABLE_STATUS_SLAVE_VAL = (short) 0x8;
    public final static short TABLE_STATUS_MASTER_VAL = (short) 0x9;
    public final static short REQUESTFORWARD_SLAVE_VAL = (short) 0xa;
    public final static short REQUESTFORWARD_MASTER_VAL = (short) 0xb;
    public final static short FLOW_STATS_SLAVE_VAL = (short) 0xc;
    public final static short FLOW_STATS_MASTER_VAL = (short) 0xd;
    public final static short CONT_STATUS_SLAVE_VAL = (short) 0xe;
    public final static short CONT_STATUS_MASTER_VAL = (short) 0xf;
    public final static short EXPERIMENTER_SLAVE_VAL = (short) 0xfffe;
    public final static short EXPERIMENTER_MASTER_VAL = (short) 0xffff;

    public static OFAsyncConfigPropType readFrom(ByteBuf bb) throws OFParseError {
        try {
            return ofWireValue(U8.f(bb.readByte()));
        } catch (IllegalArgumentException e) {
            throw new OFParseError(e);
        }
    }

    public static void writeTo(ByteBuf bb, OFAsyncConfigPropType e) {
        bb.writeByte(U8.t(toWireValue(e)));
    }

    public static void putTo(OFAsyncConfigPropType e, PrimitiveSink sink) {
        sink.putShort(toWireValue(e));
    }

    public static OFAsyncConfigPropType ofWireValue(short val) {
        switch(val) {
            case PACKET_IN_SLAVE_VAL:
                return OFAsyncConfigPropType.PACKET_IN_SLAVE;
            case PACKET_IN_MASTER_VAL:
                return OFAsyncConfigPropType.PACKET_IN_MASTER;
            case PORT_STATUS_SLAVE_VAL:
                return OFAsyncConfigPropType.PORT_STATUS_SLAVE;
            case PORT_STATUS_MASTER_VAL:
                return OFAsyncConfigPropType.PORT_STATUS_MASTER;
            case FLOW_REMOVED_SLAVE_VAL:
                return OFAsyncConfigPropType.FLOW_REMOVED_SLAVE;
            case FLOW_REMOVED_MASTER_VAL:
                return OFAsyncConfigPropType.FLOW_REMOVED_MASTER;
            case ROLE_STATUS_SLAVE_VAL:
                return OFAsyncConfigPropType.ROLE_STATUS_SLAVE;
            case ROLE_STATUS_MASTER_VAL:
                return OFAsyncConfigPropType.ROLE_STATUS_MASTER;
            case TABLE_STATUS_SLAVE_VAL:
                return OFAsyncConfigPropType.TABLE_STATUS_SLAVE;
            case TABLE_STATUS_MASTER_VAL:
                return OFAsyncConfigPropType.TABLE_STATUS_MASTER;
            case REQUESTFORWARD_SLAVE_VAL:
                return OFAsyncConfigPropType.REQUESTFORWARD_SLAVE;
            case REQUESTFORWARD_MASTER_VAL:
                return OFAsyncConfigPropType.REQUESTFORWARD_MASTER;
            case FLOW_STATS_SLAVE_VAL:
                return OFAsyncConfigPropType.FLOW_STATS_SLAVE;
            case FLOW_STATS_MASTER_VAL:
                return OFAsyncConfigPropType.FLOW_STATS_MASTER;
            case CONT_STATUS_SLAVE_VAL:
                return OFAsyncConfigPropType.CONT_STATUS_SLAVE;
            case CONT_STATUS_MASTER_VAL:
                return OFAsyncConfigPropType.CONT_STATUS_MASTER;
            case EXPERIMENTER_SLAVE_VAL:
                return OFAsyncConfigPropType.EXPERIMENTER_SLAVE;
            case EXPERIMENTER_MASTER_VAL:
                return OFAsyncConfigPropType.EXPERIMENTER_MASTER;
            default:
                throw new IllegalArgumentException("Illegal wire value for type OFAsyncConfigPropType in version 1.5: " + val);
        }
    }


    public static short toWireValue(OFAsyncConfigPropType e) {
        switch(e) {
            case PACKET_IN_SLAVE:
                return PACKET_IN_SLAVE_VAL;
            case PACKET_IN_MASTER:
                return PACKET_IN_MASTER_VAL;
            case PORT_STATUS_SLAVE:
                return PORT_STATUS_SLAVE_VAL;
            case PORT_STATUS_MASTER:
                return PORT_STATUS_MASTER_VAL;
            case FLOW_REMOVED_SLAVE:
                return FLOW_REMOVED_SLAVE_VAL;
            case FLOW_REMOVED_MASTER:
                return FLOW_REMOVED_MASTER_VAL;
            case ROLE_STATUS_SLAVE:
                return ROLE_STATUS_SLAVE_VAL;
            case ROLE_STATUS_MASTER:
                return ROLE_STATUS_MASTER_VAL;
            case TABLE_STATUS_SLAVE:
                return TABLE_STATUS_SLAVE_VAL;
            case TABLE_STATUS_MASTER:
                return TABLE_STATUS_MASTER_VAL;
            case REQUESTFORWARD_SLAVE:
                return REQUESTFORWARD_SLAVE_VAL;
            case REQUESTFORWARD_MASTER:
                return REQUESTFORWARD_MASTER_VAL;
            case FLOW_STATS_SLAVE:
                return FLOW_STATS_SLAVE_VAL;
            case FLOW_STATS_MASTER:
                return FLOW_STATS_MASTER_VAL;
            case CONT_STATUS_SLAVE:
                return CONT_STATUS_SLAVE_VAL;
            case CONT_STATUS_MASTER:
                return CONT_STATUS_MASTER_VAL;
            case EXPERIMENTER_SLAVE:
                return EXPERIMENTER_SLAVE_VAL;
            case EXPERIMENTER_MASTER:
                return EXPERIMENTER_MASTER_VAL;
            default:
                throw new IllegalArgumentException("Illegal enum value for type OFAsyncConfigPropType in version 1.5: " + e);
        }
    }

}
